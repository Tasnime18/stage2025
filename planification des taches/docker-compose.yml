version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: planification-postgres
    environment:
      POSTGRES_DB: planificationDB
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - planification-network
    restart: unless-stopped

  # Authentification Service
  authentification-service:
    build:
      context: ./authentification-service
      dockerfile: Dockerfile
    container_name: authentification-service
    ports:
      - "8081:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/planificationDB
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root
      - SERVER_PORT=8080
    depends_on:
      - postgres
    networks:
      - planification-network
    restart: unless-stopped

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8082:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/planificationDB
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root
      - SERVER_PORT=8080
    depends_on:
      - postgres
    networks:
      - planification-network
    restart: unless-stopped

  # Task Service
  task-service:
    build:
      context: ./task-service
      dockerfile: Dockerfile
    container_name: task-service
    ports:
      - "8083:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/planificationDB
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=root
      - SERVER_PORT=8080
    depends_on:
      - postgres
    networks:
      - planification-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  planification-network:
    driver: bridge